2021/12/28 06:06:08 [info] pid_12033: [main(), main.cxx:88] LogInit()完成，可以开始写日志记录了...
2021/12/28 06:06:08 [info] pid_12033: [InitSignals(), ngx_signal.cxx:62] 
2021/12/28 06:06:08 [info] pid_12033: [InitSocket(), ngx_c_slogic_socket.cxx:104] 
2021/12/28 06:06:08 [info] pid_12033: [InitSocket(), ngx_c_socket.cxx:287] 
2021/12/28 06:06:08 [info] pid_12033: [ReadConf(), ngx_c_socket.cxx:254] 
2021/12/28 06:06:08 [info] pid_12033: [GetIntDefault(), ngx_c_conf.cxx:106] 
2021/12/28 06:06:08 [info] pid_12033: [GetIntDefault(), ngx_c_conf.cxx:106] 
2021/12/28 06:06:08 [info] pid_12033: [GetIntDefault(), ngx_c_conf.cxx:106] 
2021/12/28 06:06:08 [info] pid_12033: [GetIntDefault(), ngx_c_conf.cxx:106] 
2021/12/28 06:06:08 [info] pid_12033: [GetIntDefault(), ngx_c_conf.cxx:106] 
2021/12/28 06:06:08 [info] pid_12033: [OpenListeningSockets(), ngx_c_socket.cxx:423] 
2021/12/28 06:06:08 [info] pid_12033: [SetNonblocking(), ngx_c_socket.cxx:532] 参数: sockfd = 4
2021/12/28 06:06:08 [info] pid_12033: [GetIntDefault(), ngx_c_conf.cxx:106] 
2021/12/28 06:06:08 [info] pid_12033: [OpenListeningSockets(), ngx_c_socket.cxx:498] 监听端口[80]成功!
2021/12/28 06:06:08 [info] pid_12033: [SetNonblocking(), ngx_c_socket.cxx:532] 参数: sockfd = 5
2021/12/28 06:06:08 [info] pid_12033: [GetIntDefault(), ngx_c_conf.cxx:106] 
2021/12/28 06:06:08 [info] pid_12033: [OpenListeningSockets(), ngx_c_socket.cxx:498] 监听端口[443]成功!
2021/12/28 06:06:08 [info] pid_12033: [InitSetProcTitle(), ngx_set_proctitile.cxx:30] 
2021/12/28 06:06:08 [info] pid_12033: [GetIntDefault(), ngx_c_conf.cxx:106] 
2021/12/28 06:06:08 [info] pid_12033: [CreatDaemon(), ngx_daemon.cxx:25] 
2021/12/28 06:06:08 [info] pid_12033: [main(), main.cxx:120] 原来的main进程完成使命退出历史舞台，后面任务交给守护进程master和后面会创建的工作进程worker了...
2021/12/28 06:06:08 [info] pid_12034: [MasterProcessCycle(), ngx_process_cycle.cxx:37] 
2021/12/28 06:06:08 [info] pid_12034: [SetProcTitle(), ngx_set_proctitile.cxx:69] 
2021/12/28 06:06:08 [info] pid_12034: [MasterProcessCycle(), ngx_process_cycle.cxx:81] master process ./bin/x86/Debug/net_frame 12034 【master进程】启动并开始运行...
2021/12/28 06:06:08 [info] pid_12034: [GetIntDefault(), ngx_c_conf.cxx:106] 
2021/12/28 06:06:08 [info] pid_12034: [StartCreatWorkerProc(), ngx_process_cycle.cxx:148] 
2021/12/28 06:06:08 [info] pid_12034: [CreatWorkerProc(), ngx_process_cycle.cxx:179] 
2021/12/28 06:06:08 [info] pid_12035: [WorkerProcessCycle(), ngx_process_cycle.cxx:223] 
2021/12/28 06:06:08 [info] pid_12035: [SetProcTitle(), ngx_set_proctitile.cxx:69] 
2021/12/28 06:06:08 [info] pid_12035: [InitWorkerProcess(), ngx_process_cycle.cxx:273] 
2021/12/28 06:06:08 [info] pid_12035: [GetIntDefault(), ngx_c_conf.cxx:106] 
2021/12/28 06:06:08 [info] pid_12035: [Create(), ngx_c_threadpool.cxx:143] 参数: 线程池创建线程数量thread_n = 2
2021/12/28 06:06:08 [stderr] pid_12035: [LogStderr(), ngx_log.cxx:127] nginx: CThreadPool::Create()创建线程0成功,线程id = 3074095936
2021/12/28 06:06:08 [info] pid_12035: [ThreadFunc(), ngx_c_threadpool.cxx:221] 参数: 创建线程[3074095936]时传递的参数thread_data = 09248060
2021/12/28 06:06:08 [stderr] pid_12035: [LogStderr(), ngx_log.cxx:127] nginx: CThreadPool::Create()创建线程1成功,线程id = 3065703232
2021/12/28 06:06:08 [info] pid_12035: [ThreadFunc(), ngx_c_threadpool.cxx:221] 参数: 创建线程[3065703232]时传递的参数thread_data = 092480A0
2021/12/28 06:06:09 [info] pid_12035: [InitSubproc(), ngx_c_socket.cxx:318] 
2021/12/28 06:06:09 [info] pid_12035: [InitEpoll(), ngx_c_socket.cxx:655] 
2021/12/28 06:06:09 [info] pid_12035: [ServerSendListThread(), ngx_c_socket.cxx:1035] 参数: thread_data = 09248090
2021/12/28 06:06:09 [info] pid_12035: [ServerTimerQueueMonitorThread(), ngx_c_socket_time.cxx:283] 参数: 时间队列监视和处理线程[3038763840], 该线程的线程参数threadData = 09248350
2021/12/28 06:06:09 [info] pid_12035: [GetConnectionFromCPool(), ngx_c_socket_conn.cxx:226] 套接字[socket=4]来连接池取一个连接了...
2021/12/28 06:06:09 [info] pid_12035: [GetConnectionFromCPool(), ngx_c_socket_conn.cxx:241] 连接池中有空闲连接，从这些空闲连接中取到一个连接[4]
2021/12/28 06:06:09 [info] pid_12035: [EpollOperEvent(), ngx_c_socket.cxx:741] 参数: fd = 4, event_type = 1, flag = 8193, otherflag = 0, p_conn = 0924AB48
2021/12/28 06:06:09 [info] pid_12035: [GetConnectionFromCPool(), ngx_c_socket_conn.cxx:226] 套接字[socket=5]来连接池取一个连接了...
2021/12/28 06:06:09 [info] pid_12035: [GetConnectionFromCPool(), ngx_c_socket_conn.cxx:241] 连接池中有空闲连接，从这些空闲连接中取到一个连接[5]
2021/12/28 06:06:09 [info] pid_12035: [EpollOperEvent(), ngx_c_socket.cxx:741] 参数: fd = 5, event_type = 1, flag = 8193, otherflag = 0, p_conn = 0924ABE0
2021/12/28 06:06:09 [info] pid_12035: [WorkerProcessCycle(), ngx_process_cycle.cxx:230] 子进程worker process[pid_12035]已经启动并初始化完成，下面要开始真正干活了...
2021/12/28 06:06:09 [info] pid_12035: [ProcessEventsAndTimers(), ngx_event.cxx:7] 
2021/12/28 06:06:09 [info] pid_12035: [EpollProcessEvents(), ngx_c_socket.cxx:912] 
2021/12/28 06:08:56 [info] pid_12035: [GetConnectionFromCPool(), ngx_c_socket_conn.cxx:226] 套接字[socket=7]来连接池取一个连接了...
2021/12/28 06:08:56 [info] pid_12035: [GetConnectionFromCPool(), ngx_c_socket_conn.cxx:241] 连接池中有空闲连接，从这些空闲连接中取到一个连接[7]
2021/12/28 06:08:56 [info] pid_12035: [EpollOperEvent(), ngx_c_socket.cxx:741] 参数: fd = 7, event_type = 1, flag = 8193, otherflag = 0, p_conn = 0924AC78
2021/12/28 06:08:56 [info] pid_12035: [AddToTimerMultimap(), ngx_c_socket_time.cxx:46] 参数：p_conn = 0924AC78
2021/12/28 06:08:56 [info] pid_12035: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/28 06:08:56 [info] pid_12035: [ProcessEventsAndTimers(), ngx_event.cxx:7] 
2021/12/28 06:08:56 [info] pid_12035: [EpollProcessEvents(), ngx_c_socket.cxx:912] 
2021/12/28 06:09:17 [info] pid_12035: [GetOverTimeTimer(), ngx_c_socket_time.cxx:149] 参数: cur_time = 1640642957
2021/12/28 06:09:17 [info] pid_12035: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/28 06:09:17 [info] pid_12035: [RemoveFirstTimer(), ngx_c_socket_time.cxx:110] 
2021/12/28 06:09:17 [info] pid_12035: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/28 06:09:17 [info] pid_12035: [GetOverTimeTimer(), ngx_c_socket_time.cxx:149] 参数: cur_time = 1640642957
2021/12/28 06:09:17 [info] pid_12035: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/28 06:09:38 [info] pid_12035: [GetOverTimeTimer(), ngx_c_socket_time.cxx:149] 参数: cur_time = 1640642978
2021/12/28 06:09:38 [info] pid_12035: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/28 06:09:38 [info] pid_12035: [RemoveFirstTimer(), ngx_c_socket_time.cxx:110] 
2021/12/28 06:09:38 [info] pid_12035: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/28 06:09:38 [info] pid_12035: [GetOverTimeTimer(), ngx_c_socket_time.cxx:149] 参数: cur_time = 1640642978
2021/12/28 06:09:38 [info] pid_12035: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/28 06:09:59 [info] pid_12035: [GetOverTimeTimer(), ngx_c_socket_time.cxx:149] 参数: cur_time = 1640642999
2021/12/28 06:09:59 [info] pid_12035: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/28 06:09:59 [info] pid_12035: [RemoveFirstTimer(), ngx_c_socket_time.cxx:110] 
2021/12/28 06:09:59 [info] pid_12035: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/28 06:09:59 [info] pid_12035: [GetOverTimeTimer(), ngx_c_socket_time.cxx:149] 参数: cur_time = 1640642999
2021/12/28 06:09:59 [info] pid_12035: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/28 06:10:20 [info] pid_12035: [GetOverTimeTimer(), ngx_c_socket_time.cxx:149] 参数: cur_time = 1640643020
2021/12/28 06:10:20 [info] pid_12035: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/28 06:10:20 [info] pid_12035: [RemoveFirstTimer(), ngx_c_socket_time.cxx:110] 
2021/12/28 06:10:20 [info] pid_12035: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/28 06:10:20 [info] pid_12035: [GetOverTimeTimer(), ngx_c_socket_time.cxx:149] 参数: cur_time = 1640643020
2021/12/28 06:10:20 [info] pid_12035: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/28 06:10:20 [info] pid_12035: [PingTimeOutChecking(), ngx_c_slogic_socket.cxx:326] 时间到不发心跳包，踢出去!
2021/12/28 06:10:20 [info] pid_12035: [ManualCloseSocketProc(), ngx_c_socket.cxx:216] 
2021/12/28 06:10:20 [info] pid_12035: [DeleteFromTimerMultimap(), ngx_c_socket_time.cxx:198] 参数: p_conn = 0924AC78
2021/12/28 06:10:20 [info] pid_12035: [AddRecyConnectList(), ngx_c_socket_conn.cxx:416] 连接加到延迟回收队列(list)中，连接[-1]在[80]秒后将被回收
2021/12/28 06:11:40 [info] pid_12035: [ServerRecyConnectionThread(), ngx_c_socket_conn.cxx:515] 已经延时[80]秒了，此时待回收连接数有[1]个
2021/12/28 06:11:40 [info] pid_12035: [ServerRecyConnectionThread(), ngx_c_socket_conn.cxx:516] 现在对连接[-1]开始走回收流程...
2021/12/28 06:11:40 [info] pid_12035: [FreeConnectionToCPool(), ngx_c_socket_conn.cxx:353] 归还连接[4294967295]到连接池中完成，此时连接池中空闲连接有[m_list_free_connection.size()=1022]
2021/12/28 06:11:40 [info] pid_12035: [ServerRecyConnectionThread(), ngx_c_socket_conn.cxx:526] 连接[4294967295]回收完成!
2021/12/28 06:17:43 [info] pid_12035: [GetConnectionFromCPool(), ngx_c_socket_conn.cxx:226] 套接字[socket=7]来连接池取一个连接了...
2021/12/28 06:17:43 [info] pid_12035: [GetConnectionFromCPool(), ngx_c_socket_conn.cxx:241] 连接池中有空闲连接，从这些空闲连接中取到一个连接[7]
2021/12/28 06:17:43 [info] pid_12035: [EpollOperEvent(), ngx_c_socket.cxx:741] 参数: fd = 7, event_type = 1, flag = 8193, otherflag = 0, p_conn = 0924AD10
2021/12/28 06:17:43 [info] pid_12035: [AddToTimerMultimap(), ngx_c_socket_time.cxx:46] 参数：p_conn = 0924AD10
2021/12/28 06:17:43 [info] pid_12035: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/28 06:17:43 [info] pid_12035: [ProcessEventsAndTimers(), ngx_event.cxx:7] 
2021/12/28 06:17:43 [info] pid_12035: [EpollProcessEvents(), ngx_c_socket.cxx:912] 
2021/12/28 06:17:55 [info] pid_12035: [ReadRequestHandler(), ngx_c_socket_request.cxx:34] 参数: p_conn = 0924AD10
2021/12/28 06:17:55 [info] pid_12035: [RecvProc(), ngx_c_socket_request.cxx:137] 参数: p_conn=0924AD10, p_buff=0924AD61, len_buf=8
2021/12/28 06:17:55 [info] pid_12035: [WaitRequestHandlerProcPart1(), ngx_c_socket_request.cxx:245] 参数: p_conn = 0924AD10
2021/12/28 06:17:55 [stderr] pid_12035: [LogStderr(), ngx_log.cxx:127] nginx: [WaitRequestHandlerProcPart1(), ngx_c_socket_request.cxx:261] 包头收完整了，包头结构体中表示[包头+包体]的长度len_pkg = 108
2021/12/28 06:17:55 [info] pid_12035: [ProcessEventsAndTimers(), ngx_event.cxx:7] 
2021/12/28 06:17:55 [info] pid_12035: [EpollProcessEvents(), ngx_c_socket.cxx:912] 
2021/12/28 06:17:55 [info] pid_12035: [ReadRequestHandler(), ngx_c_socket_request.cxx:34] 参数: p_conn = 0924AD10
2021/12/28 06:17:55 [info] pid_12035: [RecvProc(), ngx_c_socket_request.cxx:137] 参数: p_conn=0924AD10, p_buff=09278B0C, len_buf=100
2021/12/28 06:17:55 [info] pid_12035: [WaitRequestHandlerProcLast(), ngx_c_socket_request.cxx:335] 参数: p_conn = 0924AD10
2021/12/28 06:17:55 [stderr] pid_12035: [LogStderr(), ngx_log.cxx:127] nginx: [WaitRequestHandlerProcLast(), ngx_c_socket_request.cxx:341] 包体收完整了，读取出包头中信息[包头+包体]的长度len_pkg = 108
2021/12/28 06:17:55 [info] pid_12035: [AddMsgRecvQueueAndSignal(), ngx_c_threadpool.cxx:464] 参数: p_buf = 09278AF8
2021/12/28 06:17:55 [info] pid_12035: [AddMsgRecvQueueAndSignal(), ngx_c_threadpool.cxx:486] 在发信号给线程之前从消息队列中取出最上面一个消息，消息队列中最上面一个消息表示[包头+包体]的长度len_pkg = 108
2021/12/28 06:17:55 [info] pid_12035: [Call(), ngx_c_threadpool.cxx:418] 
2021/12/28 06:17:55 [info] pid_12035: [ProcessEventsAndTimers(), ngx_event.cxx:7] 
2021/12/28 06:17:55 [info] pid_12035: [EpollProcessEvents(), ngx_c_socket.cxx:912] 
2021/12/28 06:17:55 [info] pid_12035: [ThreadFunc(), ngx_c_threadpool.cxx:290] 线程[3074095936]被激活正在处理从消息队列中取出最上面一个消息，消息队列中最上面一个消息表示[包头+包体]的长度len_pkg = 108
2021/12/28 06:17:55 [info] pid_12035: [ThreadRecvProcFunc(), ngx_c_slogic_socket.cxx:129] 参数: p_msg_buf = 09278AF8
2021/12/28 06:17:55 [alert] pid_12035: [ThreadRecvProcFunc(), ngx_c_slogic_socket.cxx:184] msg_type = 5, 消息码找不到对应的处理函数，有可能是被篡改了
2021/12/28 06:18:04 [info] pid_12035: [GetOverTimeTimer(), ngx_c_socket_time.cxx:149] 参数: cur_time = 1640643484
2021/12/28 06:18:04 [info] pid_12035: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/28 06:18:04 [info] pid_12035: [RemoveFirstTimer(), ngx_c_socket_time.cxx:110] 
2021/12/28 06:18:04 [info] pid_12035: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/28 06:18:04 [info] pid_12035: [GetOverTimeTimer(), ngx_c_socket_time.cxx:149] 参数: cur_time = 1640643484
2021/12/28 06:18:04 [info] pid_12035: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/28 06:18:05 [info] pid_12035: [ReadRequestHandler(), ngx_c_socket_request.cxx:34] 参数: p_conn = 0924AD10
2021/12/28 06:18:05 [info] pid_12035: [RecvProc(), ngx_c_socket_request.cxx:137] 参数: p_conn=0924AD10, p_buff=0924AD61, len_buf=8
2021/12/28 06:18:05 [info] pid_12035: [WaitRequestHandlerProcPart1(), ngx_c_socket_request.cxx:245] 参数: p_conn = 0924AD10
2021/12/28 06:18:05 [stderr] pid_12035: [LogStderr(), ngx_log.cxx:127] nginx: [WaitRequestHandlerProcPart1(), ngx_c_socket_request.cxx:261] 包头收完整了，包头结构体中表示[包头+包体]的长度len_pkg = 8
2021/12/28 06:18:05 [info] pid_12035: [WaitRequestHandlerProcLast(), ngx_c_socket_request.cxx:335] 参数: p_conn = 0924AD10
2021/12/28 06:18:05 [stderr] pid_12035: [LogStderr(), ngx_log.cxx:127] nginx: [WaitRequestHandlerProcLast(), ngx_c_socket_request.cxx:341] 包体收完整了，读取出包头中信息[包头+包体]的长度len_pkg = 8
2021/12/28 06:18:05 [info] pid_12035: [AddMsgRecvQueueAndSignal(), ngx_c_threadpool.cxx:464] 参数: p_buf = 09278AF8
2021/12/28 06:18:05 [info] pid_12035: [AddMsgRecvQueueAndSignal(), ngx_c_threadpool.cxx:486] 在发信号给线程之前从消息队列中取出最上面一个消息，消息队列中最上面一个消息表示[包头+包体]的长度len_pkg = 8
2021/12/28 06:18:05 [info] pid_12035: [Call(), ngx_c_threadpool.cxx:418] 
2021/12/28 06:18:05 [info] pid_12035: [ProcessEventsAndTimers(), ngx_event.cxx:7] 
2021/12/28 06:18:05 [info] pid_12035: [EpollProcessEvents(), ngx_c_socket.cxx:912] 
2021/12/28 06:18:05 [info] pid_12035: [ThreadFunc(), ngx_c_threadpool.cxx:290] 线程[3065703232]被激活正在处理从消息队列中取出最上面一个消息，消息队列中最上面一个消息表示[包头+包体]的长度len_pkg = 8
2021/12/28 06:18:05 [info] pid_12035: [ThreadRecvProcFunc(), ngx_c_slogic_socket.cxx:129] 参数: p_msg_buf = 09278AF8
2021/12/28 06:18:05 [info] pid_12035: [SendMsg(), ngx_c_socket.cxx:617] 参数: p_sendbuf = B4700468
2021/12/28 06:18:05 [info] pid_12035: [ServerSendListThread(), ngx_c_socket.cxx:1130] 即将发送的数据长度是[8]
2021/12/28 06:18:05 [info] pid_12035: [SendProc(), ngx_c_socket_request.cxx:378] 参数: p_conn = 0924AD10, p_buf = B4700474, size = 8
2021/12/28 06:18:05 [info] pid_12035: [SendProc(), ngx_c_socket_request.cxx:388] send()成功发送了[8]字节的数据
2021/12/28 06:18:05 [stderr] pid_12035: [LogStderr(), ngx_log.cxx:127] nginx: [ServerSendListThread(), ngx_c_socket.cxx:1141] 数据通过send()发送完毕，很好！
2021/12/28 06:18:05 [info] pid_12035: [_HandlePing(), ngx_c_slogic_socket.cxx:409] 成功收到了心跳包并返回结果！
2021/12/28 06:18:25 [info] pid_12035: [GetOverTimeTimer(), ngx_c_socket_time.cxx:149] 参数: cur_time = 1640643505
2021/12/28 06:18:25 [info] pid_12035: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/28 06:18:25 [info] pid_12035: [RemoveFirstTimer(), ngx_c_socket_time.cxx:110] 
2021/12/28 06:18:25 [info] pid_12035: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/28 06:18:25 [info] pid_12035: [GetOverTimeTimer(), ngx_c_socket_time.cxx:149] 参数: cur_time = 1640643505
2021/12/28 06:18:25 [info] pid_12035: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/28 06:18:27 [info] pid_12035: [ReadRequestHandler(), ngx_c_socket_request.cxx:34] 参数: p_conn = 0924AD10
2021/12/28 06:18:27 [info] pid_12035: [RecvProc(), ngx_c_socket_request.cxx:137] 参数: p_conn=0924AD10, p_buff=0924AD61, len_buf=8
2021/12/28 06:18:27 [info] pid_12035: [WaitRequestHandlerProcPart1(), ngx_c_socket_request.cxx:245] 参数: p_conn = 0924AD10
2021/12/28 06:18:27 [stderr] pid_12035: [LogStderr(), ngx_log.cxx:127] nginx: [WaitRequestHandlerProcPart1(), ngx_c_socket_request.cxx:261] 包头收完整了，包头结构体中表示[包头+包体]的长度len_pkg = 8
2021/12/28 06:18:27 [info] pid_12035: [WaitRequestHandlerProcLast(), ngx_c_socket_request.cxx:335] 参数: p_conn = 0924AD10
2021/12/28 06:18:27 [stderr] pid_12035: [LogStderr(), ngx_log.cxx:127] nginx: [WaitRequestHandlerProcLast(), ngx_c_socket_request.cxx:341] 包体收完整了，读取出包头中信息[包头+包体]的长度len_pkg = 8
2021/12/28 06:18:27 [info] pid_12035: [AddMsgRecvQueueAndSignal(), ngx_c_threadpool.cxx:464] 参数: p_buf = 09278AF8
2021/12/28 06:18:27 [info] pid_12035: [AddMsgRecvQueueAndSignal(), ngx_c_threadpool.cxx:486] 在发信号给线程之前从消息队列中取出最上面一个消息，消息队列中最上面一个消息表示[包头+包体]的长度len_pkg = 8
2021/12/28 06:18:27 [info] pid_12035: [Call(), ngx_c_threadpool.cxx:418] 
2021/12/28 06:18:27 [info] pid_12035: [ProcessEventsAndTimers(), ngx_event.cxx:7] 
2021/12/28 06:18:27 [info] pid_12035: [EpollProcessEvents(), ngx_c_socket.cxx:912] 
2021/12/28 06:18:27 [info] pid_12035: [ThreadFunc(), ngx_c_threadpool.cxx:290] 线程[3074095936]被激活正在处理从消息队列中取出最上面一个消息，消息队列中最上面一个消息表示[包头+包体]的长度len_pkg = 8
2021/12/28 06:18:27 [info] pid_12035: [ThreadRecvProcFunc(), ngx_c_slogic_socket.cxx:129] 参数: p_msg_buf = 09278AF8
2021/12/28 06:18:27 [info] pid_12035: [SendMsg(), ngx_c_socket.cxx:617] 参数: p_sendbuf = B6200478
2021/12/28 06:18:27 [info] pid_12035: [ServerSendListThread(), ngx_c_socket.cxx:1130] 即将发送的数据长度是[8]
2021/12/28 06:18:27 [info] pid_12035: [SendProc(), ngx_c_socket_request.cxx:378] 参数: p_conn = 0924AD10, p_buf = B6200484, size = 8
2021/12/28 06:18:27 [info] pid_12035: [SendProc(), ngx_c_socket_request.cxx:388] send()成功发送了[8]字节的数据
2021/12/28 06:18:27 [stderr] pid_12035: [LogStderr(), ngx_log.cxx:127] nginx: [ServerSendListThread(), ngx_c_socket.cxx:1141] 数据通过send()发送完毕，很好！
2021/12/28 06:18:27 [info] pid_12035: [_HandlePing(), ngx_c_slogic_socket.cxx:409] 成功收到了心跳包并返回结果！
2021/12/28 06:18:46 [info] pid_12035: [GetOverTimeTimer(), ngx_c_socket_time.cxx:149] 参数: cur_time = 1640643526
2021/12/28 06:18:46 [info] pid_12035: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/28 06:18:46 [info] pid_12035: [RemoveFirstTimer(), ngx_c_socket_time.cxx:110] 
2021/12/28 06:18:46 [info] pid_12035: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/28 06:18:46 [info] pid_12035: [GetOverTimeTimer(), ngx_c_socket_time.cxx:149] 参数: cur_time = 1640643526
2021/12/28 06:18:46 [info] pid_12035: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/28 06:18:56 [info] pid_12035: [ReadRequestHandler(), ngx_c_socket_request.cxx:34] 参数: p_conn = 0924AD10
2021/12/28 06:18:56 [info] pid_12035: [RecvProc(), ngx_c_socket_request.cxx:137] 参数: p_conn=0924AD10, p_buff=0924AD61, len_buf=8
2021/12/28 06:18:56 [info] pid_12035: [ManualCloseSocketProc(), ngx_c_socket.cxx:216] 
2021/12/28 06:18:56 [info] pid_12035: [DeleteFromTimerMultimap(), ngx_c_socket_time.cxx:198] 参数: p_conn = 0924AD10
2021/12/28 06:18:56 [info] pid_12035: [AddRecyConnectList(), ngx_c_socket_conn.cxx:416] 连接加到延迟回收队列(list)中，连接[-1]在[80]秒后将被回收
2021/12/28 06:18:56 [info] pid_12035: [ProcessEventsAndTimers(), ngx_event.cxx:7] 
2021/12/28 06:18:56 [info] pid_12035: [EpollProcessEvents(), ngx_c_socket.cxx:912] 
2021/12/28 06:20:16 [info] pid_12035: [ServerRecyConnectionThread(), ngx_c_socket_conn.cxx:515] 已经延时[80]秒了，此时待回收连接数有[1]个
2021/12/28 06:20:16 [info] pid_12035: [ServerRecyConnectionThread(), ngx_c_socket_conn.cxx:516] 现在对连接[-1]开始走回收流程...
2021/12/28 06:20:16 [info] pid_12035: [FreeConnectionToCPool(), ngx_c_socket_conn.cxx:353] 归还连接[4294967295]到连接池中完成，此时连接池中空闲连接有[m_list_free_connection.size()=1022]
2021/12/28 06:20:16 [info] pid_12035: [ServerRecyConnectionThread(), ngx_c_socket_conn.cxx:526] 连接[4294967295]回收完成!
