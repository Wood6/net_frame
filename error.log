2021/12/29 03:05:18 [info] pid_446: [main(), main.cxx:86] LogInit()完成，可以开始写日志记录了...
2021/12/29 03:05:18 [info] pid_446: [InitSignals(), ngx_signal.cxx:62] 
2021/12/29 03:05:18 [info] pid_446: [InitSocket(), ngx_c_slogic_socket.cxx:104] 
2021/12/29 03:05:18 [info] pid_446: [InitSocket(), ngx_c_socket.cxx:348] 
2021/12/29 03:05:18 [info] pid_446: [ReadConf(), ngx_c_socket.cxx:310] 
2021/12/29 03:05:18 [info] pid_446: [GetIntDefault(), ngx_c_conf.cxx:141] 
2021/12/29 03:05:18 [info] pid_446: [GetIntDefault(), ngx_c_conf.cxx:141] 
2021/12/29 03:05:18 [info] pid_446: [GetIntDefault(), ngx_c_conf.cxx:141] 
2021/12/29 03:05:18 [info] pid_446: [GetIntDefault(), ngx_c_conf.cxx:141] 
2021/12/29 03:05:18 [info] pid_446: [GetIntDefault(), ngx_c_conf.cxx:141] 
2021/12/29 03:05:18 [info] pid_446: [GetIntDefault(), ngx_c_conf.cxx:141] 
2021/12/29 03:05:18 [info] pid_446: [GetIntDefault(), ngx_c_conf.cxx:141] 
2021/12/29 03:05:18 [info] pid_446: [GetIntDefault(), ngx_c_conf.cxx:141] 
2021/12/29 03:05:18 [info] pid_446: [GetIntDefault(), ngx_c_conf.cxx:141] 
2021/12/29 03:05:18 [info] pid_446: [OpenListeningSockets(), ngx_c_socket.cxx:484] 
2021/12/29 03:05:18 [info] pid_446: [SetNonblocking(), ngx_c_socket.cxx:593] 参数: sockfd = 4
2021/12/29 03:05:18 [info] pid_446: [GetIntDefault(), ngx_c_conf.cxx:141] 
2021/12/29 03:05:18 [info] pid_446: [OpenListeningSockets(), ngx_c_socket.cxx:559] 监听端口[80]成功!
2021/12/29 03:05:18 [info] pid_446: [SetNonblocking(), ngx_c_socket.cxx:593] 参数: sockfd = 5
2021/12/29 03:05:18 [info] pid_446: [GetIntDefault(), ngx_c_conf.cxx:141] 
2021/12/29 03:05:18 [info] pid_446: [OpenListeningSockets(), ngx_c_socket.cxx:559] 监听端口[443]成功!
2021/12/29 03:05:18 [info] pid_446: [InitSetProcTitle(), ngx_set_proctitile.cxx:30] 
2021/12/29 03:05:18 [info] pid_446: [GetIntDefault(), ngx_c_conf.cxx:141] 
2021/12/29 03:05:18 [info] pid_446: [CreatDaemon(), ngx_daemon.cxx:25] 
2021/12/29 03:05:18 [info] pid_446: [main(), main.cxx:118] 原来的main进程完成使命退出历史舞台，后面任务交给守护进程master和后面会创建的工作进程worker了...
2021/12/29 03:05:18 [info] pid_447: [MasterProcessCycle(), ngx_process_cycle.cxx:37] 
2021/12/29 03:05:18 [info] pid_447: [SetProcTitle(), ngx_set_proctitile.cxx:69] 
2021/12/29 03:05:18 [info] pid_447: [MasterProcessCycle(), ngx_process_cycle.cxx:81] master process ./bin/x86/Debug/net_frame 447 【master进程】启动并开始运行...
2021/12/29 03:05:18 [info] pid_447: [GetIntDefault(), ngx_c_conf.cxx:141] 
2021/12/29 03:05:18 [info] pid_447: [StartCreatWorkerProc(), ngx_process_cycle.cxx:148] 
2021/12/29 03:05:18 [info] pid_447: [CreatWorkerProc(), ngx_process_cycle.cxx:179] 
2021/12/29 03:05:18 [info] pid_448: [WorkerProcessCycle(), ngx_process_cycle.cxx:223] 
2021/12/29 03:05:18 [info] pid_448: [SetProcTitle(), ngx_set_proctitile.cxx:69] 
2021/12/29 03:05:18 [info] pid_448: [InitWorkerProcess(), ngx_process_cycle.cxx:273] 
2021/12/29 03:05:18 [info] pid_448: [GetIntDefault(), ngx_c_conf.cxx:141] 
2021/12/29 03:05:18 [info] pid_448: [Create(), ngx_c_threadpool.cxx:143] 参数: 线程池创建线程数量thread_n = 20
2021/12/29 03:05:18 [stderr] pid_448: [LogStderr(), ngx_log.cxx:127] nginx: CThreadPool::Create()创建线程0成功,线程id = 3074612032
2021/12/29 03:05:18 [stderr] pid_448: [LogStderr(), ngx_log.cxx:127] nginx: CThreadPool::Create()创建线程1成功,线程id = 3066219328
2021/12/29 03:05:18 [info] pid_448: [ThreadFunc(), ngx_c_threadpool.cxx:221] 参数: 创建线程[3066219328]时传递的参数thread_data = 094650A0
2021/12/29 03:05:18 [info] pid_448: [ThreadFunc(), ngx_c_threadpool.cxx:221] 参数: 创建线程[3074612032]时传递的参数thread_data = 09465060
2021/12/29 03:05:18 [stderr] pid_448: [LogStderr(), ngx_log.cxx:127] nginx: CThreadPool::Create()创建线程2成功,线程id = 3057826624
2021/12/29 03:05:18 [info] pid_448: [ThreadFunc(), ngx_c_threadpool.cxx:221] 参数: 创建线程[3057826624]时传递的参数thread_data = 09465090
2021/12/29 03:05:18 [info] pid_448: [ThreadFunc(), ngx_c_threadpool.cxx:221] 参数: 创建线程[3048209216]时传递的参数thread_data = 094652A8
2021/12/29 03:05:18 [stderr] pid_448: [LogStderr(), ngx_log.cxx:127] nginx: CThreadPool::Create()创建线程3成功,线程id = 3048209216
2021/12/29 03:05:18 [stderr] pid_448: [LogStderr(), ngx_log.cxx:127] nginx: CThreadPool::Create()创建线程4成功,线程id = 3037723456
2021/12/29 03:05:18 [info] pid_448: [ThreadFunc(), ngx_c_threadpool.cxx:221] 参数: 创建线程[3037723456]时传递的参数thread_data = 09465368
2021/12/29 03:05:18 [stderr] pid_448: [LogStderr(), ngx_log.cxx:127] nginx: CThreadPool::Create()创建线程5成功,线程id = 3029330752
2021/12/29 03:05:18 [info] pid_448: [ThreadFunc(), ngx_c_threadpool.cxx:221] 参数: 创建线程[3029330752]时传递的参数thread_data = 09465120
2021/12/29 03:05:18 [stderr] pid_448: [LogStderr(), ngx_log.cxx:127] nginx: CThreadPool::Create()创建线程6成功,线程id = 3020938048
2021/12/29 03:05:18 [info] pid_448: [ThreadFunc(), ngx_c_threadpool.cxx:221] 参数: 创建线程[3020938048]时传递的参数thread_data = 09465130
2021/12/29 03:05:18 [stderr] pid_448: [LogStderr(), ngx_log.cxx:127] nginx: CThreadPool::Create()创建线程7成功,线程id = 3012545344
2021/12/29 03:05:18 [info] pid_448: [ThreadFunc(), ngx_c_threadpool.cxx:221] 参数: 创建线程[3012545344]时传递的参数thread_data = 09465140
2021/12/29 03:05:18 [info] pid_448: [ThreadFunc(), ngx_c_threadpool.cxx:221] 参数: 创建线程[3004152640]时传递的参数thread_data = 09465150
2021/12/29 03:05:18 [stderr] pid_448: [LogStderr(), ngx_log.cxx:127] nginx: CThreadPool::Create()创建线程8成功,线程id = 3004152640
2021/12/29 03:05:18 [stderr] pid_448: [LogStderr(), ngx_log.cxx:127] nginx: CThreadPool::Create()创建线程9成功,线程id = 2995759936
2021/12/29 03:05:18 [stderr] pid_448: [LogStderr(), ngx_log.cxx:127] nginx: CThreadPool::Create()创建线程10成功,线程id = 2987367232
2021/12/29 03:05:18 [info] pid_448: [ThreadFunc(), ngx_c_threadpool.cxx:221] 参数: 创建线程[2995759936]时传递的参数thread_data = 09465160
2021/12/29 03:05:18 [info] pid_448: [ThreadFunc(), ngx_c_threadpool.cxx:221] 参数: 创建线程[2987367232]时传递的参数thread_data = 09465170
2021/12/29 03:05:18 [stderr] pid_448: [LogStderr(), ngx_log.cxx:127] nginx: CThreadPool::Create()创建线程11成功,线程id = 2978974528
2021/12/29 03:05:18 [info] pid_448: [ThreadFunc(), ngx_c_threadpool.cxx:221] 参数: 创建线程[2978974528]时传递的参数thread_data = 094687E0
2021/12/29 03:05:18 [stderr] pid_448: [LogStderr(), ngx_log.cxx:127] nginx: CThreadPool::Create()创建线程12成功,线程id = 2970581824
2021/12/29 03:05:18 [stderr] pid_448: [LogStderr(), ngx_log.cxx:127] nginx: CThreadPool::Create()创建线程13成功,线程id = 2962189120
2021/12/29 03:05:18 [info] pid_448: [ThreadFunc(), ngx_c_threadpool.cxx:221] 参数: 创建线程[2970581824]时传递的参数thread_data = 09468888
2021/12/29 03:05:18 [info] pid_448: [ThreadFunc(), ngx_c_threadpool.cxx:221] 参数: 创建线程[2962189120]时传递的参数thread_data = 09468930
2021/12/29 03:05:18 [stderr] pid_448: [LogStderr(), ngx_log.cxx:127] nginx: CThreadPool::Create()创建线程14成功,线程id = 2953796416
2021/12/29 03:05:18 [info] pid_448: [ThreadFunc(), ngx_c_threadpool.cxx:221] 参数: 创建线程[2953796416]时传递的参数thread_data = 094689D8
2021/12/29 03:05:18 [stderr] pid_448: [LogStderr(), ngx_log.cxx:127] nginx: CThreadPool::Create()创建线程15成功,线程id = 2945403712
2021/12/29 03:05:18 [info] pid_448: [ThreadFunc(), ngx_c_threadpool.cxx:221] 参数: 创建线程[2945403712]时传递的参数thread_data = 09468A80
2021/12/29 03:05:18 [stderr] pid_448: [LogStderr(), ngx_log.cxx:127] nginx: CThreadPool::Create()创建线程16成功,线程id = 2937011008
2021/12/29 03:05:18 [info] pid_448: [ThreadFunc(), ngx_c_threadpool.cxx:221] 参数: 创建线程[2928618304]时传递的参数thread_data = 094685D0
2021/12/29 03:05:18 [stderr] pid_448: [LogStderr(), ngx_log.cxx:127] nginx: CThreadPool::Create()创建线程17成功,线程id = 2928618304
2021/12/29 03:05:18 [info] pid_448: [ThreadFunc(), ngx_c_threadpool.cxx:221] 参数: 创建线程[2937011008]时传递的参数thread_data = 09468B28
2021/12/29 03:05:18 [info] pid_448: [ThreadFunc(), ngx_c_threadpool.cxx:221] 参数: 创建线程[2920225600]时传递的参数thread_data = 094685E0
2021/12/29 03:05:18 [stderr] pid_448: [LogStderr(), ngx_log.cxx:127] nginx: CThreadPool::Create()创建线程18成功,线程id = 2920225600
2021/12/29 03:05:18 [stderr] pid_448: [LogStderr(), ngx_log.cxx:127] nginx: CThreadPool::Create()创建线程19成功,线程id = 2911832896
2021/12/29 03:05:18 [info] pid_448: [ThreadFunc(), ngx_c_threadpool.cxx:221] 参数: 创建线程[2911832896]时传递的参数thread_data = 094685F0
2021/12/29 03:05:19 [info] pid_448: [InitSubproc(), ngx_c_socket.cxx:379] 
2021/12/29 03:05:19 [info] pid_448: [ServerSendListThread(), ngx_c_socket.cxx:1003] 参数: thread_data = 09468600
2021/12/29 03:05:19 [info] pid_448: [InitEpoll(), ngx_c_socket.cxx:716] 
2021/12/29 03:05:19 [info] pid_448: [ServerTimerQueueMonitorThread(), ngx_c_socket_time.cxx:290] 参数: 时间队列监视和处理线程[2886654784], 该线程的线程参数threadData = 09468E20
2021/12/29 03:05:19 [info] pid_448: [GetConnectionFromCPool(), ngx_c_socket_conn.cxx:229] 套接字[socket=4]来连接池取一个连接了...
2021/12/29 03:05:19 [info] pid_448: [GetConnectionFromCPool(), ngx_c_socket_conn.cxx:244] 连接池中有空闲连接，从这些空闲连接中取到一个连接[09469018]
2021/12/29 03:05:19 [info] pid_448: [EpollOperEvent(), ngx_c_socket.cxx:802] 参数: fd = 4, event_type = 1, flag = 8193, otherflag = 0, p_conn = 09469018
2021/12/29 03:05:19 [info] pid_448: [GetConnectionFromCPool(), ngx_c_socket_conn.cxx:229] 套接字[socket=5]来连接池取一个连接了...
2021/12/29 03:05:19 [info] pid_448: [GetConnectionFromCPool(), ngx_c_socket_conn.cxx:244] 连接池中有空闲连接，从这些空闲连接中取到一个连接[094690D0]
2021/12/29 03:05:19 [info] pid_448: [EpollOperEvent(), ngx_c_socket.cxx:802] 参数: fd = 5, event_type = 1, flag = 8193, otherflag = 0, p_conn = 094690D0
2021/12/29 03:05:19 [info] pid_448: [WorkerProcessCycle(), ngx_process_cycle.cxx:230] 子进程worker process[pid_448]已经启动并初始化完成，下面要开始真正干活了...
2021/12/29 03:05:19 [info] pid_448: [ProcessEventsAndTimers(), ngx_event.cxx:7] 
2021/12/29 03:05:19 [info] pid_448: [EpollProcessEvents(), ngx_c_socket.cxx:880] 
2021/12/29 03:05:45 [info] pid_448: [GetConnectionFromCPool(), ngx_c_socket_conn.cxx:229] 套接字[socket=7]来连接池取一个连接了...
2021/12/29 03:05:45 [info] pid_448: [GetConnectionFromCPool(), ngx_c_socket_conn.cxx:244] 连接池中有空闲连接，从这些空闲连接中取到一个连接[09469198]
2021/12/29 03:05:45 [info] pid_448: [EpollOperEvent(), ngx_c_socket.cxx:802] 参数: fd = 7, event_type = 1, flag = 8193, otherflag = 0, p_conn = 09469198
2021/12/29 03:05:45 [info] pid_448: [AddToTimerMultimap(), ngx_c_socket_time.cxx:46] 参数：p_conn = 09469198
2021/12/29 03:05:45 [info] pid_448: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/29 03:05:45 [info] pid_448: [ProcessEventsAndTimers(), ngx_event.cxx:7] 
2021/12/29 03:05:45 [info] pid_448: [EpollProcessEvents(), ngx_c_socket.cxx:880] 
2021/12/29 03:06:06 [info] pid_448: [GetOverTimeTimer(), ngx_c_socket_time.cxx:149] 参数: cur_time = 1640718366
2021/12/29 03:06:06 [info] pid_448: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/29 03:06:06 [info] pid_448: [RemoveFirstTimer(), ngx_c_socket_time.cxx:110] 
2021/12/29 03:06:06 [info] pid_448: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/29 03:06:06 [info] pid_448: [GetOverTimeTimer(), ngx_c_socket_time.cxx:149] 参数: cur_time = 1640718366
2021/12/29 03:06:06 [info] pid_448: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/29 03:06:27 [info] pid_448: [GetOverTimeTimer(), ngx_c_socket_time.cxx:149] 参数: cur_time = 1640718387
2021/12/29 03:06:27 [info] pid_448: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/29 03:06:27 [info] pid_448: [RemoveFirstTimer(), ngx_c_socket_time.cxx:110] 
2021/12/29 03:06:27 [info] pid_448: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/29 03:06:27 [info] pid_448: [GetOverTimeTimer(), ngx_c_socket_time.cxx:149] 参数: cur_time = 1640718387
2021/12/29 03:06:27 [info] pid_448: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/29 03:06:48 [info] pid_448: [GetOverTimeTimer(), ngx_c_socket_time.cxx:149] 参数: cur_time = 1640718408
2021/12/29 03:06:48 [info] pid_448: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/29 03:06:48 [info] pid_448: [RemoveFirstTimer(), ngx_c_socket_time.cxx:110] 
2021/12/29 03:06:48 [info] pid_448: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/29 03:06:48 [info] pid_448: [GetOverTimeTimer(), ngx_c_socket_time.cxx:149] 参数: cur_time = 1640718408
2021/12/29 03:06:48 [info] pid_448: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/29 03:07:09 [info] pid_448: [GetOverTimeTimer(), ngx_c_socket_time.cxx:149] 参数: cur_time = 1640718429
2021/12/29 03:07:09 [info] pid_448: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/29 03:07:09 [info] pid_448: [RemoveFirstTimer(), ngx_c_socket_time.cxx:110] 
2021/12/29 03:07:09 [info] pid_448: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/29 03:07:09 [info] pid_448: [GetOverTimeTimer(), ngx_c_socket_time.cxx:149] 参数: cur_time = 1640718429
2021/12/29 03:07:09 [info] pid_448: [GetEarliestTime(), ngx_c_socket_time.cxx:81] 
2021/12/29 03:07:09 [info] pid_448: [PingTimeOutChecking(), ngx_c_slogic_socket.cxx:335] 时间到不发心跳包，将此连接[09469198]踢出去!
2021/12/29 03:07:09 [info] pid_448: [ManualCloseSocketProc(), ngx_c_socket.cxx:203] 参数: p_conn = 09469198
2021/12/29 03:07:09 [info] pid_448: [DeleteFromTimerMultimap(), ngx_c_socket_time.cxx:205] 参数: p_conn = 09469198
2021/12/29 03:07:09 [info] pid_448: [AddRecyConnectList(), ngx_c_socket_conn.cxx:319] 连接加到延迟回收队列(list)中，连接[09469198]在[80]秒后将被回收
2021/12/29 03:08:29 [info] pid_448: [ServerRecyConnectionThread(), ngx_c_socket_conn.cxx:420] 已经延时[80]秒了，此时待回收连接数有[1]个
2021/12/29 03:08:29 [info] pid_448: [ServerRecyConnectionThread(), ngx_c_socket_conn.cxx:421] 现在对连接[09469198]开始走回收流程...
2021/12/29 03:08:29 [info] pid_448: [FreeConnectionToCPool(), ngx_c_socket_conn.cxx:297] 归还连接[4294967295]到连接池中完成，此时连接池中空闲连接有[m_list_free_connection.size()=1022]
2021/12/29 03:08:29 [info] pid_448: [ServerRecyConnectionThread(), ngx_c_socket_conn.cxx:431] 连接[09469198]回收完成!
